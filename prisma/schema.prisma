generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Answer {
  answer_id   Int       @id @default(autoincrement())
  answer_text String
  question_id Int       @unique
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @updatedAt @db.Timestamp(6)
  question    Question  @relation(fields: [question_id], references: [question_id], onDelete: NoAction, onUpdate: NoAction, map: "question_id")
}

model Category {
  category_id   Int        @id @default(autoincrement())
  category_name String
  created_at    DateTime?  @default(now()) @db.Timestamp(6)
  updated_at    DateTime?  @updatedAt @db.Timestamp(6)
  questions     Question[]
}

model Question {
  question_id   Int       @id @default(autoincrement())
  question_text String
  visit_count   Int?
  category_id   Int?
  created_at    DateTime? @default(now())
  updated_at    DateTime? @updatedAt @db.Timestamp(6)
  answer        Answer?
  category      Category? @relation(fields: [category_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "category_id")
}

model User {
  user_id    Int       @id @default(autoincrement())
  name       String
  surname    String
  role       Int       @default(1)
  email      String    @unique
  password   String
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @updatedAt @db.Timestamp(6)
  audit      Audit[]
}

model Audit {
  audit_id   Int       @id @default(autoincrement())
  user_id    Int
  action     String
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @updatedAt @db.Timestamp(6)
  user       User?     @relation(fields: [user_id], references: [user_id])
}
